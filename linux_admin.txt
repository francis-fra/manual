#------------------------------------------------------------
# CLI Data Science
#------------------------------------------------------------
# installation
pip install csvkit
sudo npm install xml2json-command

# install jq from https://stedolan.github.io/jq/

# install json2csv
# no sudo, user based
go get github.com/jehiah/json2csv

#------------------------------------------------------------
# Data Science Command Line
#------------------------------------------------------------
cat hello-world | wc -w
< hello-world wc -w

# convert xlsx to csv
in2csv <excel input file> > <csv out file>

# quick look at csv file
cat imdb-250.csv | head -n 10 | csvcut -c Title,Year | csvlook


# download file with curl
curl <url>
# ftp with login credentials
curl -u username:password ftp://host/file

# translate fro lower to upper
echo "hi" | tr '[:lower:]' '[:upper:]'


# TODO: getopts
# word count and sort by frequency
cat shakes.txt | tr '[:upper:]' '[:lower:]' | grep -oE '\w+' | sort | uniq -c | sort -nr | head -n 10


# python / R command line
#! /usr/bin/env python
#! /usr/bin/env Rscript

# header / body / cols

# get the header of a csv file
< tips.csv header

# remove the header
< tips.csv header -d 

# add a header
< tips.csv header -a newheader

# use 'tr' to transform text, but apply to the 'body' only and only to
# the 'day' col only
< tips.csv cols -c day body "tr '[a-z]' '[A-Z]'" | head -n 5 | csvlook

# csvcut
# select all cols except species
< iris.csv csvcut -C species | head -n 5 | csvlook

# csvsql
< iris.csv csvsql --query "SELECT sepal_length, petal_length FROM stdin WHERE sepal_length > 6" | head -n 5 | csvlook

# filtering - csvgrep
# sel size with is 5
csvgrep -c size -r "5" tips.csv | csvlook


# create new cols -- transformation
< names.csv csvsql --query "SELECT id, first_name || ' ' || last_name AS full_name, born FROM stdin" | csvlook

# stack csv (vertical)
csvstack Iris-*.csv 

# horizontal stack of the three files: bills.csv, customers.csv and datetime.csv
paste -d, {bills,customers,datetime}.csv

# inner join
csvjoin -c species iris.csv irismeta.csv | csvcut -c sepal_length,sepal_width,species,usda_id | csvlook

# csvsql
csvsql --query 'SELECT i.sepal_length, i.sepal_width, i.species, m.usda_id FROM iris i JOIN irismeta m ON (i.species = m.species)' iris.csv irismeta.csv | csvlook

#------------------------------------------------------------
# Basic
#------------------------------------------------------------
w; free; df;

# tty1
Ctrl+Alt+F1

# shutdown
shutdown -h now

# -e to enable interpretation of back slash
echo -e "Hello\nWorld"

# cat and grep for archived files
zcat and zgrep

#-----------------------------------------------------------
# admin
#-----------------------------------------------------------
# show running service
service --status-all



# show hostname
hostnamectl


# create a hard link
ln <existing_file> <new_link>

# how to find out they are linked?? (check the link count?)

# soft link
ln -s <existing_file_or_directory> <new_link>

# mount
mount <source_device> <mount_point>


#-----------------------------------------------------------
# find command
#-----------------------------------------------------------
# find the matching names
find . -name \*.txt

# add this to run the command from the output of find
-exec command {} \;

# example: change user own and gorup
find /home/chavez -exec chown chavez {} \; \ -exec chgrp physics {} \;

# parameters
type -d (directory)
type -f (file)
type -l (symbolic link)

# find files
locate <filename>

find <src_dir> -name <file_name>
# xargs??




# see content of zip file
gzcat

# to examine the content of a tar file
tar -tf <xxx.tar>

#-----------------------------------------------------------
# Archive
#-----------------------------------------------------------
# archive
# step 1: compress and tar a folder
# c for compress
tar cvf <xxx.tar> <target_directory>

# step 2: to create .gz file
gzip xxxx.tar

# extract
# step 1: unzip
gunzip xxxx.tar.gz

# step 2: uncompress
# x for extract
#tar xvf <xxx.tar>
tar -xvf <xxx.tgz> -C <destination folder>

# to uncompress xxx.tgz
tar -zxvf <xxx.tgz>

#-----------------------------------------------------------
# compress tgz file
tar cvzf <xxx.tgz> <target_dir>

# extract tgz file
tar xvzf <xxx.tgz> -C <destination_dir>

#-----------------------------------------------------------
# tar and compress
#-----------------------------------------------------------
# one liner (tar and compress)
tar -cf - <source folder | gzip > <destination folder/xxx.tar.gz>

# one liner (extract)
gzip -dc <xxxx.tar.gz> | tar -xf - -C <destination folder>

#-----------------------------------------------------------
# useful commands
#-----------------------------------------------------------
# issue schedule job
sudo apt-get install at
# example
at now + 7 hours

# cron jobs 
/etc/cron.*


# word count
wc -l ~/Documents/ubuntu_setup.txt

# running process
ps [-ef]

# sort by the 3rd field
sort -t: -k3,3 -n /etc/group

# word count
tr -sc 'A-Za-z' '\n' < <filename> | sort | uniq -c

# file management
file <filename>
tree <directory>

# drive mount
# store at /etc/fstab

# disk space
df -h
# disk usage
du -h

# sorting (descending) the number
du -h | sort -nr

# grep
grep -option <string> <file or directory>
grep -r (recursive)
grep -n (line num)
grep -c (count only)
grep -i (ignore case)
grep -A (show additional lines after the target)
grep -o print only the matching  part
grep -l (list file name only)


# these are equivalent
cat <file> | grep <pattern>
grep <pattern> <file>

# show the output and also save the content to a file
tee <file_name>

# remove sections of text
cut -f (extract field)
cut -d (delimiter)
# e.g. grep the word 'chapter' from the file 'alice.txt' and then
#extract the field from number 3 till the end where the delimiter is
#empty space

grep -i chapter alice.txt | cut -d ' ' -f 3-

# e.g. read the file 'alice.txt' and extract using the regular
# expression (every single word)
< alice.txt grep -oE '\w+'






# coproc (putting in background)
coproc <command>

# excecute command line num from the history list
!<num>

# alias
alias li='ls -li'


#------------------------------------------------------------
# user management
#------------------------------------------------------------
# add new user & group
sudo adduser <user_name>
sudo groupadd <group_name>

# add user to sudo group (fedora)
sudo usermod -aG sudo <usename>  (reboot required)


# or visudo (RH)

# check all sudoers
grep -Po '^sudo.+:\K.*$' /etc/group
cat /etc/sudoers

# change ownership
chown <new-owner> <files>

# default file mode for newly created files
umask <code>


#-----------------------------------------------------------
# Environment Variables
#-----------------------------------------------------------
# global environment var
printenv
# e.g.
printenv HOME
printevn USER

# local variable
my_var=Hello
my_var="Hello World"

echo $PATH


# to remove env variable
unset <var name>

# some startup files are placed in:
/etc/profile.d

# varialbe arrays
mytest=(one tow three)
echo $mytest
echo ${mytest[1]}
echo ${mytest[*]}

#-----------------------------------------------------------
# File Permission
#-----------------------------------------------------------
# add new user and create home directory
useradd -m <username>

# remove a user
userdel -r <username>

# change password
passwd
# change passwd expiration date
chage

# account management
usermod

# groups
/etc/group

# add new group
groupadd <name>

# add user to a group
usermod -G <group_name> <user_name>

# default file permissions
umask <setting>

# change ownership
chown <owner> <file>
chown <owner>.<group> <file>

# change group
chgrp <group> <file>

# set SGID for directory
chmod g+s <dir>

# check user ids
id <user_name>

# file system check
fsck <option> <fs>


#-----------------------------------------------------------
# Install software
#-----------------------------------------------------------
# Debian system
aptitude
apt-get
dkpg

# Red hat system
yum
zypper

#-----------------------------------------------------------
# MySQL (MariaDB)
#-----------------------------------------------------------
# initial start
mysql -u root

# TODO: config mariadb


#-----------------------------------------------------------
# Shell script
#-----------------------------------------------------------
# start of script:
#!/bin/bash

# do math, example:
expr 6 * 9
bc
scale=4         # set the num of floating pts

# exit status code:
#?



#-----------------------------------------------------------
# Networking
#-----------------------------------------------------------
mtr google.com

# config files
/etc/hosts : list of hostnames
/etc/services : network service, port
/etc/resolv.conf : DNS
/etc/host.conf : network info
/etc/host.conf : it list the order for hostname resolution
/etc/dhcp/dhclient.conf : DHCP client config



#------------------------------------------------------------
# Emacs setup
#------------------------------------------------------------
# install ess
sudo apt-get install ess

# config file
.emacs

# start ess
M-x R

# auto-complete package
M-x package_install [RET] auto-complete [RET]

# python
M-x python-mode
C-c C-p


#------------------------------------------------------------
# Bash
#------------------------------------------------------------
# shebang
#!/bin/bash
echo "hello."

# run bash script
bash <file> or source <file>

# shell
DOC='/home/fra/Documents'
echo $DOC

comp='fra'
echo "I am ${comp}"

# back quotes
echo "There are `wc -l /etc/passwd` lines in the password file."

#------------------------------------------------------------
# Config files
#------------------------------------------------------------
# grub
/etc/default/grub

# etc...
/etc/group
/etc/passwd

/etc/hosts
/etc/services

#------------------------------------------------------------
# Networking
#------------------------------------------------------------
# to find out the ip
hostname -I
# with more details
ip addr show

localhost : 127.0.0.1

# netmask config
ifconfig
# IP routing table
netstat -rn

# display all env
env

# group
/etc/group

# network statistics
netstat



#------------------------------------------------------------
# SSH server
#------------------------------------------------------------
sudo apt-get install openssh-server
sudo apt-get install openssh-client
# setup firewall
sudo ufw allow 22
sudo ufw app list
sudo ufw status


# config file stored at
/etc/ssh/sshd_config

# edit port number different from 22, e.g.
Port 2122
Protocol 2
LoginGraceTime 120
PermitRootLogin no
PasswordAuthenatication no
AllowUsers user1 user2
PrintLastlog yes
IgnoreRhosts yes
RhostsAuthentication no
RSAAuthentication yes
HostbasedAuthentication no
# ListenAddress 192.168.1.20


# welcome message, edit
/etc/issue.net
# and then add this line to sshd_config file
Banner /etc/issue.net

# restart
sudo service ssh restart
sudo systemctl reload sshd (RH)

# check if sshd is active
netstat -plant

#-------------------------------------------------------------
# SSH client
#-------------------------------------------------------------
# LOCAL: SSH key generation
ssh-keygen -t rsa

# LOCAL: default public key stored in
~/.ssh/id_rsa.pub

# LOCAL: default private key
~/.ssh/id_rsa

# make the key pairs private
chmod 700 .ssh
chmod 600 .ssh/id_rsa*

#-------------------------------------------------------------
# copy and append the public key to the remote machine
# use dropbox or scp

# copy via scp (if password authentication allowed)
scp -P <port_number> ~/.ssh/id_rsa.pub username@serverip:~/tmp/.ssh


# Does not seem to work...
#?? add the SSH key to the ssh-agent (github)
#eval "$(ssh-agent -s)"
#ssh-add ~/.ssh/id_rsa
#?? to place the public key to the remote machine
# LOCAL: install the public key (id_rsa.pub) to the remote host
#ssh-copy-id username@remotehost



#-------------------------------------------------------------
# Append the local machine public key to the server authorized keys

# backup
cp ~/.ssh/authorized_keys ~/.ssh/authorized_keys_copy
# append
cat ~/id_rsa.pub >> ~/.ssh/authorized_keys

# HOST: check ~/.ssh/authorized_keys in the remote host
chmod 600 ~/.ssh/authorized_keys

#-------------------------------------------------------------
# Examples
# to connect
# e.g. ssh -p 22 fra@192.168.0.1
ssh -p <port_number> username@serverip

# login without keys
ssh -l username ipaddress

#-------------------------------------------------------------
# File Transfer
#-------------------------------------------------------------
scp -P <port_num> <source> <destination>

# to copy files to remote host, e.g.
scp -P <port_num> myfile.txt username@192.168.2.21:/home/demo

# to copy from remote host, e.g.
scp -P <port_num> username@192.168.2.21:/home/demo/myfile.txt .

scp -P <port> <filename> <destination>:location
e.g. scp -P 22 mydoc.txt fra@192.168.1.6:Documents/



#------------------------------------------------------------
# Rsync
#------------------------------------------------------------
sudo apt-get install rsync
yum install rsync

# sync files locally
rsync -zvh <source_file> <target_directory>
# e.g.
rsync -zvh backup.tar /tmp/backups

# sync directory locally
rsync -avzh <source_directory> <target_directory>
# e.g.
rsync -avzh /home/fra/Documents /tmp/backups/Documents

# sync from local to remote
rsync -avz <local_source> <remote_target>
# e.g.
rsync -avz /home/fra/Documents fra@192.168.1.10:/home/fra/

# rsync from remote to local
rsync -avz <remote_target> <local_source> 
rsync -avzh fra@192.168.1.10:/home/fra /home/fra/Documents

# to transfer via ssh
# add -e to options

# to show progress
# add -progress to options
rsync -avzh -e 'ssh -p 22' --progress fra@192.168.1.10:/home/fra /home/fra/Documents

#-------------------------------------------------------------
# HTTP Server
#-------------------------------------------------------------
sudo apt-get install apache2
# try
"http://<local_IP_address>

# check app list
sudo ufw app list
# check details
sudo ufw app info "Apache Full"
sudo ufw allow in "Apache Full"

# to find the server IP address
# ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'

# start, restart and stop
sudo /etc/init.d/apache2 start   #start apache
sudo /etc/init.d/apache2 stop   #stop apache
sudo /etc/init.d/apache2 restart   #restart apache
# alternatively
sudo service httpd restart
sudo service apache2 restart

# to prevent from starting at boot
sudo update-rc.d -f apache2 remove

# to autostart
sudo update-rc.d apache2 defaults

# existing hosts
/etc/hosts

#-------------------------------------------------------------
# Permissions
#-------------------------------------------------------------
# change ownership
sudo chown -R www-data:www-data /var/www/html
sudo chmod -R 755 /var/www/html/


#-------------------------------------------------------------
# Default localhost folder
#-------------------------------------------------------------
# default location is /var/www/html

# to change another location
# edit /etc/apache2/sites-enabled/000-default
# replace the DocumentRoot and Directory to the new location

# manual restart
sudo /etc/init.d/apache2 restart
# alternatively
sudo systemctl restart apache2


# optional
# to create multiple sites
# config file
/etc/apache2/apache2.conf

# two subdirectories in /etc/apache2:
# hosts config files defining virtualHosts
/etc/apache2/sites-available
# contain symlinks to sites-available
/etc/apache2/sites-enabled

# to create a new virtual host
# create a new file mysite.com.conf under sites-available
# example:
<VirtualHost *:80>
ServerAdmin webmaster@mysite.com
DocumentRoot /var/www/mysite.com
ServerName www.mysite.com
ErrorLog /var/log/apache2/error.log
</VirtualHost>


# to create multiple sites
cp /etc/apache2/sites-available/default /etc/apache2/sites-available/newsite

# then edit /etc/apache2/sites-available/newsite
sudo a2dissite default
sudo a2ensite newsite


#-------------------------------------------------------------
# SSL
#-------------------------------------------------------------
# enable SSL
sudo a2enmod ssl

# setup wordpress db
CREATE DATABASE wpdb;
CREATE USER wpuser@localhost IDENTIFIED BY 'new_password_here';
GRANT ALL ON wpdb.* to wpuser@localhost;
FLUSH PRIVILEGES;


#-------------------------------------------------------------
# PHP
#-------------------------------------------------------------
sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql


# default config file:
/etc/php5/apache2/php.ini

# optional
sudo apt-get install libapache2-mod-php5 php5-mysql
php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap
php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell
php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl

# default index file
/etc/apache2/mods-enabled/dir.conf

# to check php modules available
apt-cache search php- | less
apt-cache show <package_name>

# edit info.php
/var/www/html/info.php
<?php phpinfo(); ?>

# check
http://localhost/info.php

# install php myadmin
sudo apt-get install phpmyadmin

# check
http://localhost/phpmyadmin/


#-------------------------------------------------------------
# Word Press
#-------------------------------------------------------------
# create a new mysql database
# inside mysql:
CREATE DATABASE wpdb;
CREATE USER wpuser@localhost IDENTIFIED BY 'password';
GRANT ALL ON wpdb.* TO wpuser@localhost;

# package
# sudo apt-get install wordpress

# download
cd ~/Downloads/ && wget http://wordpress.org/latest.tar.gz

# extract
tar -xvzf latest.tar.gz

# some setup
touch wordpress/.htaccess
chmod 660 wordpress/.htaccess
cp wordpress/wp-config-sample.php wordpress/wp-config.php
mkdir wordpress/wp-content/upgrade

# edit this file:
// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define('DB_NAME', 'wpdb');

/** MySQL database username */
define('DB_USER', 'wpuser');

/** MySQL database password */
define('DB_PASSWORD', 'password');

# copy the wordpress files to /var/www/html
sudo cp -a wordpress/* /var/www/html


# set permission
sudo chown -R fra:www-data /var/www/html/

sudo chmod g+w /var/www/html/wp-content
sudo chmod -R g+w /var/www/html/wp-content/themes
sudo chmod -R g+w /var/www/html/wp-content/plugins

#sudo chmod -R 755 /var/www/html/
